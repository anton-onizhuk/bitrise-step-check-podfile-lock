
title: |-
  Check Podfile.lock
summary: |
  Test Podfile.lock for any changes since previous pod install
description: |
  Test Podfile.lock for any changes since previous pod install. 

  Basically it runs the same script as you probably have in your build phases under the name `[CP] Check Pods Manifest.lock` that annoyingly complains `"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation."`. 

  Here though you can use it to skip `pod install` completely and save some build time, which could be between few seconds and a couple of minutes depending on the project and the phase of the moon. 

  Step output is saved to env variable `PODS_OUT_OF_SYNC`. This step will never fail. If any of files if not found or random error happends the variable value is `true`.
website: https://github.com/anton-onizhuk/bitrise-step-check-podfile-lock
source_code_url: https://github.com/anton-onizhuk/bitrise-step-check-podfile-lock
support_url: https://github.com/anton-onizhuk/bitrise-step-check-podfile-lock/issues
host_os_tags:
  - osx-10.10
project_type_tags:
  - ios
  - macos
type_tags:
  - dependency

is_requires_admin_user: false
is_always_run: false
is_skippable: true
run_if: ""

toolkit:
  bash:
    entry_file: step.sh

inputs:
  - podfile_lock_path: "$BITRISE_SOURCE_DIR/Podfile.lock"
    opts:
      title: Podfile.lock file
      summary: Path to Podfile.lock file
      description: |
        Path to Podfile.lock file
      is_expand: true
      is_required: true
  - maifest_lock_path: "$BITRISE_SOURCE_DIR/Pods/Manifest.lock"
    opts:
      title: Manifest.lock file
      summary: Path to Manifest.lock file
      description: |
        Path to Manifest.lock file
      is_expand: true
      is_required: true

outputs:
  - PODS_OUT_OF_SYNC:
    opts:
      title: Does Podfile.lock contain changes
      summary: ""
      description: |
        Is `false` if Podfile.lock contains no changes since last `pod install`. In any other case (has changes, file not found, any random error) equals to `true`.

        Essentially it is the answer on the question, will Xcode fail the build because pods are out of sync. `false` doesn't mean that you don't need to update pods, but Xcode won't complain if you decide not to, at least during build phases' script.
